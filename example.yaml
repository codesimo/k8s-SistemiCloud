apiVersion: v1
kind: Secret
metadata:
  name: postgres-config
  labels:
    app: postgres-db
stringData:
  POSTGRES_USER: admin
  POSTGRES_PASSWORD: mypass
  POSTGRES_DB: postgresdb
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30080
  selector:
    app: frontend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 3
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: myfrontend
          imagePullPolicy: Never
          ports:
            - containerPort: 5000
          env:
            - name: BACKEND_HOST
              value: backend-service
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888
  selector:
    app: backend
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  selector:
    matchLabels:
      app: backend
  replicas: 3
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
        - name: backend
          image: mybackend
          imagePullPolicy: Never
          envFrom:
            - secretRef:
                name: postgres-config
          env:
            - name: POSTGRES_HOST
              value: postgres
          ports:
            - containerPort: 8888
          livenessProbe:
            httpGet:
              path: /health
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 5
          resources:
            limits:
              cpu: 100m
              memory: "512Mi"
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: postgres-pv-claim
  labels:
    app: postgres-db
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres-db
spec:
  ports:
    - port: 5432
  selector:
    app: postgres-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-db-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres-db
  template:
    metadata:
      labels:
        app: postgres-db
    spec:
      containers:
        - name: postgres-db
          image: postgres:10.1
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-volume
          resources:
            limits:
              cpu: 100m
              memory: "512Mi"
      volumes:
        - name: postgres-volume
          persistentVolumeClaim:
            claimName: postgres-pv-claim